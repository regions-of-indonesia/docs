---
import { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from "astro";
import { getCollection } from "astro:content";

import { ConstructionIcon, GithubIcon } from "lucide-solid";

import { HTMLX, IconButton } from "~/components/core";

export const getStaticPaths = (async () => {
  const docs = await getCollection("docs");

  return docs.map((doc) => {
    return {
      params: { pathname: doc.slug },
      props: { doc },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { pathname } = Astro.params as Params;
const { doc } = Astro.props as Props;

const { title, description, github } = doc.data;
const { Content } = await doc.render();

type NavLink = {
  to: Params["pathname"];
  label: string;
};

const getNavLinkClassList = (to: NavLink["to"]) => ({
  "block px-1.5 py-px text-lg font-medium": true,
  "bg-neutral-3": to === pathname,
  [to === pathname ? "text-neutral-12" : "text-neutral-10 hover:text-neutral-11"]: true,
});

const NavLinks: NavLink[] = [
  { to: "getting-started", label: "Getting started" },
  { to: "contribute", label: "Contribute" },
  { to: "examples", label: "Examples" },
];

const NavLinks_API: NavLink[] = [
  { to: "api/province", label: "Province" },
  { to: "api/district", label: "District" },
  { to: "api/subdistrict", label: "Subdistrict" },
  { to: "api/village", label: "Village" },
  { to: "api/region", label: "Region" },
  { to: "api/search", label: "Search" },
];

const NavLinks_Package: NavLink[] = [
  { to: "package/client", label: "Client" },
  { to: "package/data", label: "Data" },
  { to: "package/types", label: "Types" },
  { to: "package/utils", label: "Utils" },
  { to: "package/localforage", label: "LocalForage" },
  { to: "package/swr", label: "SWR" },
  { to: "package/react-query", label: "React Query" },
  { to: "package/solid-query", label: "Solid Query" },
  { to: "package/svelte-query", label: "Svelte Query" },
  { to: "package/vue-query", label: "Vue Query" },
];

const NavLinks_Service: NavLink[] = [
  { to: "service/dynamic", label: "Dynamic" },
  { to: "service/static", label: "Static" },
];

const NavLinks_Other: NavLink[] = [{ to: "other/rows", label: "Rows" }];
---

<HTMLX title={title} description={description}>
  <div class="container flex gap-4 lg:gap-5 mx-auto p-4 lg:p-5 w-full h-screen overflow-hidden">
    <div class="flex-shrink-0 flex flex-col w-52 md:w-56 xl:w-60 h-full">
      <div class="py-3">
        <a href="/" class="text-neutral-11 hover:text-neutral-12 text-base lg:text-lg font-semibold lg:font-bold">Regions of Indonesia</a>
      </div>

      <div class="block border-b border-dashed border-neutral-6 h-px"></div>

      <div class="block border-b border-dashed border-neutral-6 py-3">
        <h2>
          <span class="flex items-center gap-2 lg:gap-3">
            <ConstructionIcon client:idle />
            <span>Work In Progress</span>
          </span>
        </h2>
      </div>

      <div class="flex-grow overflow-auto">
        <div class="pt-1 pb-2">
          {
            NavLinks.map(({ to, label }) => (
              <a href={`/${to}`} class:list={getNavLinkClassList(to)}>
                {label}
              </a>
            ))
          }
        </div>

        <span class="flex items-center justify-between gap-2 lg:gap-3 text-xs lg:text-sm text-neutral-11">
          APIs
          <span class="flex-grow border-b border-dashed border-neutral-6 h-px"></span>
        </span>
        <div class="px-1 pt-1 pb-2">
          {
            NavLinks_API.map(({ to, label }) => (
              <a href={`/${to}`} class:list={getNavLinkClassList(to)}>
                {label}
              </a>
            ))
          }
        </div>

        <span class="flex items-center justify-between gap-2 lg:gap-3 text-xs lg:text-sm text-neutral-11">
          Packages
          <span class="flex-grow border-b border-dashed border-neutral-6 h-px"></span>
        </span>
        <div class="px-1 pt-1 pb-2">
          {
            NavLinks_Package.map(({ to, label }) => (
              <a href={`/${to}`} class:list={getNavLinkClassList(to)}>
                {label}
              </a>
            ))
          }
        </div>

        <span class="flex items-center justify-between gap-2 lg:gap-3 text-xs lg:text-sm text-neutral-11">
          Services
          <span class="flex-grow border-b border-dashed border-neutral-6 h-px"></span>
        </span>
        <div class="px-1 pt-1 pb-2">
          {
            NavLinks_Service.map(({ to, label }) => (
              <a href={`/${to}`} class:list={getNavLinkClassList(to)}>
                {label}
              </a>
            ))
          }
        </div>

        <span class="flex items-center justify-between gap-2 lg:gap-3 text-xs lg:text-sm text-neutral-11">
          Other
          <span class="flex-grow border-b border-dashed border-neutral-6 h-px"></span>
        </span>
        <div class="px-1 pt-1 pb-2">
          {
            NavLinks_Other.map(({ to, label }) => (
              <a href={`/${to}`} class:list={getNavLinkClassList(to)}>
                {label}
              </a>
            ))
          }
        </div>
      </div>
    </div>

    <div class="flex-grow flex flex-col w-auto h-full border-l border-dashed border-neutral-6 overflow-hidden">
      <div class="p-2 md:p-4 xl:p-6 border-b border-dashed border-neutral-6">
        <h1 class="flex items-center gap-2 lg:gap-4 text-xl md:text-2xl xl:text-3xl font-semibold lg:font-bold">
          {title}

          <div class="flex">
            {
              github && (
                <IconButton
                  client:idle
                  as="a"
                  title="Github"
                  href={`https://github.com/regions-of-indonesia/${github}`}
                  size="sm"
                  variant="outline"
                  target="_blank"
                >
                  <GithubIcon client:idle class="w-4" />
                </IconButton>
              )
            }
          </div>
        </h1>
      </div>

      <div class="flex-grow prose prose-main p-2 md:p-4 xl:p-6 max-w-none overflow-auto">
        <Content />
      </div>
    </div>
  </div>
</HTMLX>
